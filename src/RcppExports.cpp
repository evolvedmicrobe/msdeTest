// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sdeEulerSim
List sdeEulerSim(int nDataOut, int N, int reps, int r, double delta, int MAXBAD, NumericVector initData, NumericVector params);
RcppExport SEXP msdeTest_sdeEulerSim(SEXP nDataOutSEXP, SEXP NSEXP, SEXP repsSEXP, SEXP rSEXP, SEXP deltaSEXP, SEXP MAXBADSEXP, SEXP initDataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type nDataOut(nDataOutSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type MAXBAD(MAXBADSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initData(initDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    __result = Rcpp::wrap(sdeEulerSim(nDataOut, N, reps, r, delta, MAXBAD, initData, params));
    return __result;
END_RCPP
}
// sdeDrift
NumericVector sdeDrift(NumericVector xIn, NumericVector thetaIn, int nReps);
RcppExport SEXP msdeTest_sdeDrift(SEXP xInSEXP, SEXP thetaInSEXP, SEXP nRepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type xIn(xInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaIn(thetaInSEXP);
    Rcpp::traits::input_parameter< int >::type nReps(nRepsSEXP);
    __result = Rcpp::wrap(sdeDrift(xIn, thetaIn, nReps));
    return __result;
END_RCPP
}
// sdeDiff
NumericVector sdeDiff(NumericVector xIn, NumericVector thetaIn, int nReps);
RcppExport SEXP msdeTest_sdeDiff(SEXP xInSEXP, SEXP thetaInSEXP, SEXP nRepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type xIn(xInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaIn(thetaInSEXP);
    Rcpp::traits::input_parameter< int >::type nReps(nRepsSEXP);
    __result = Rcpp::wrap(sdeDiff(xIn, thetaIn, nReps));
    return __result;
END_RCPP
}
// sdeLogLik
NumericVector sdeLogLik(NumericVector xIn, NumericVector thetaIn, NumericVector dT, int nComp, int nReps);
RcppExport SEXP msdeTest_sdeLogLik(SEXP xInSEXP, SEXP thetaInSEXP, SEXP dTSEXP, SEXP nCompSEXP, SEXP nRepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type xIn(xInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaIn(thetaInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dT(dTSEXP);
    Rcpp::traits::input_parameter< int >::type nComp(nCompSEXP);
    Rcpp::traits::input_parameter< int >::type nReps(nRepsSEXP);
    __result = Rcpp::wrap(sdeLogLik(xIn, thetaIn, dT, nComp, nReps));
    return __result;
END_RCPP
}
// sdePrior
NumericVector sdePrior(NumericVector xIn, NumericVector thetaIn, List priorParams, int priorType, int nRv, int nReps);
RcppExport SEXP msdeTest_sdePrior(SEXP xInSEXP, SEXP thetaInSEXP, SEXP priorParamsSEXP, SEXP priorTypeSEXP, SEXP nRvSEXP, SEXP nRepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type xIn(xInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaIn(thetaInSEXP);
    Rcpp::traits::input_parameter< List >::type priorParams(priorParamsSEXP);
    Rcpp::traits::input_parameter< int >::type priorType(priorTypeSEXP);
    Rcpp::traits::input_parameter< int >::type nRv(nRvSEXP);
    Rcpp::traits::input_parameter< int >::type nReps(nRepsSEXP);
    __result = Rcpp::wrap(sdePrior(xIn, thetaIn, priorParams, priorType, nRv, nReps));
    return __result;
END_RCPP
}
// sdeEulerMCMC
List sdeEulerMCMC(NumericVector initParams, NumericVector initData, NumericVector dT, IntegerVector nDimsPerObs, LogicalVector fixedParams, int nSamples, int burn, int nParamsOut, int nDataOut, IntegerVector dataOutRow, IntegerVector dataOutCol, double updateParams, double updateData, int priorType, List priorParams, NumericVector rwJumpSd, int updateLogLik, int nLogLikOut, int updateLastMiss, int nLastMissOut);
RcppExport SEXP msdeTest_sdeEulerMCMC(SEXP initParamsSEXP, SEXP initDataSEXP, SEXP dTSEXP, SEXP nDimsPerObsSEXP, SEXP fixedParamsSEXP, SEXP nSamplesSEXP, SEXP burnSEXP, SEXP nParamsOutSEXP, SEXP nDataOutSEXP, SEXP dataOutRowSEXP, SEXP dataOutColSEXP, SEXP updateParamsSEXP, SEXP updateDataSEXP, SEXP priorTypeSEXP, SEXP priorParamsSEXP, SEXP rwJumpSdSEXP, SEXP updateLogLikSEXP, SEXP nLogLikOutSEXP, SEXP updateLastMissSEXP, SEXP nLastMissOutSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type initParams(initParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initData(initDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dT(dTSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nDimsPerObs(nDimsPerObsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type fixedParams(fixedParamsSEXP);
    Rcpp::traits::input_parameter< int >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type nParamsOut(nParamsOutSEXP);
    Rcpp::traits::input_parameter< int >::type nDataOut(nDataOutSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dataOutRow(dataOutRowSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dataOutCol(dataOutColSEXP);
    Rcpp::traits::input_parameter< double >::type updateParams(updateParamsSEXP);
    Rcpp::traits::input_parameter< double >::type updateData(updateDataSEXP);
    Rcpp::traits::input_parameter< int >::type priorType(priorTypeSEXP);
    Rcpp::traits::input_parameter< List >::type priorParams(priorParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rwJumpSd(rwJumpSdSEXP);
    Rcpp::traits::input_parameter< int >::type updateLogLik(updateLogLikSEXP);
    Rcpp::traits::input_parameter< int >::type nLogLikOut(nLogLikOutSEXP);
    Rcpp::traits::input_parameter< int >::type updateLastMiss(updateLastMissSEXP);
    Rcpp::traits::input_parameter< int >::type nLastMissOut(nLastMissOutSEXP);
    __result = Rcpp::wrap(sdeEulerMCMC(initParams, initData, dT, nDimsPerObs, fixedParams, nSamples, burn, nParamsOut, nDataOut, dataOutRow, dataOutCol, updateParams, updateData, priorType, priorParams, rwJumpSd, updateLogLik, nLogLikOut, updateLastMiss, nLastMissOut));
    return __result;
END_RCPP
}
